{"version":3,"sources":["app/modules/Dashboard/AttendanceChecker.js"],"names":["AttendanceChecker","campureImg","useRef","useState","empData","setEmpData","useCallback","imageSrc","current","getScreenshot","console","log","moment","format","timeVal","setTimeVal","txt","setTxt","handleTimeChange","val","document","querySelector","style","backgroundColor","classList","remove","add","className","onClick","type","shape","size","marginLeft","length","width","src","empID","name","branch","role","delay","onError","err","onScan","value","curDate","fetch","baseURL","then","resp","json","data","a","method","headers","req","res","obj","timing_in","status","body","JSON","stringify","v","Swal","fire","icon","title","showConfirmButton","timer","catch","error","text","timing_out","id","postEmpData","height"],"mappings":"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","file":"static/js/12.6d49715f.chunk.js","sourcesContent":["import React, { useCallback, useRef, useState } from \"react\";\r\nimport \"../../../_wastelink/_assets/sass/pages/dashboard/attendance-checker.scss\";\r\nimport Webcam from \"react-webcam\";\r\nimport {\r\n  LoadingOutlined,\r\n  CheckOutlined,\r\n  CloseOutlined,\r\n  FileExcelOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, Image, Radio } from \"antd\";\r\nimport QrReader from \"react-qr-reader\";\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\nimport baseURL from \"../../baseurl\";\r\n\r\nfunction AttendanceChecker() {\r\n  const campureImg = useRef();\r\n  const [empData, setEmpData] = useState([]);\r\n\r\n  const capture = useCallback(() => {\r\n    const imageSrc = campureImg.current.getScreenshot();\r\n    console.log(imageSrc);\r\n  }, []);\r\n\r\n  console.log(moment().format(\"HH:mm:ss\"));\r\n  const handleScan = (value) => {\r\n    console.log(value);\r\n    let curDate = moment().format(\"YYYY-MM-DD\");\r\n    if (value !== null && empData.length === 0) {\r\n      fetch(`${baseURL}/attendanceInput/?empID=${value}&daydate=${curDate}`)\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          const postEmpData = async () => {\r\n            try {\r\n              const req = await fetch(`${baseURL}/register/?empID=${value}`, {\r\n                method: \"GET\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n              });\r\n\r\n              const res = await req.json();\r\n              setEmpData(res);\r\n              console.log(data);\r\n              if (timeVal === \"IN\") {\r\n                if (data.length === 0) {\r\n                  let obj = {\r\n                    empID: value,\r\n                    timing_in: moment().format(\"HH:mm:ss\"),\r\n                    status: \"P\",\r\n                  };\r\n\r\n                  fetch(`${baseURL}/attendanceInput/`, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(obj),\r\n                  })\r\n                    .then((v) => v.json())\r\n                    .then((val) => {\r\n                      console.log(val);\r\n                      Swal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Attendance Successfully Marked\",\r\n                        showConfirmButton: false,\r\n                        timer: 1500,\r\n                      });\r\n                    })\r\n                    .catch((err) => {\r\n                      Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Something went wrong\",\r\n                      });\r\n                      console.error(`ERROR: ${err}`);\r\n                    });\r\n                } else {\r\n                  setEmpData([]);\r\n                  Swal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Already Exist\",\r\n                    text: \"Already Exist\",\r\n                  });\r\n                }\r\n              } else if (timeVal === \"OUT\") {\r\n                console.log(data);\r\n                if (data.length > 0) {\r\n                  if (data[0].timing_out !== \"\") {\r\n                    setEmpData([]);\r\n                    Swal.fire({\r\n                      icon: \"error\",\r\n                      title: \"Employee already exited!\",\r\n                    });\r\n                    return false;\r\n                  }\r\n\r\n                  let obj = {\r\n                    empID: value,\r\n                    timing_in: data[0].timing_in,\r\n                    timing_out: moment().format(\"HH:mm:ss\"),\r\n                    status: data[0].status,\r\n                  };\r\n\r\n                  fetch(`${baseURL}/attendanceList/${data[0].id}/`, {\r\n                    method: \"PUT\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(obj),\r\n                  })\r\n                    .then((v) => v.json())\r\n                    .then((val) => {\r\n                      Swal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Attendance Successfully Marked\",\r\n                        showConfirmButton: false,\r\n                        timer: 1500,\r\n                      });\r\n                    })\r\n                    .catch((err) => {\r\n                      Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Something went wrong\",\r\n                      });\r\n                      console.error(`ERROR: ${err}`);\r\n                    });\r\n                } else {\r\n                  setEmpData([]);\r\n                  Swal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Employee Entry not exist\",\r\n                    text: \"Employee Entry not exist\",\r\n                  });\r\n                }\r\n              }\r\n            } catch (err) {\r\n              console.error(`ERROR: ${err}`);\r\n            }\r\n          };\r\n\r\n          postEmpData();\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.log(err);\r\n  };\r\n\r\n  const resetQrcode = () => {\r\n    setEmpData([]);\r\n  };\r\n\r\n  const [timeVal, setTimeVal] = useState(\"IN\");\r\n  const [txt, setTxt] = useState(\"Entry Time Qrcode Scan\");\r\n\r\n  const handleTimeChange = (val) => {\r\n    setTimeVal(val);\r\n    if (val === \"IN\") {\r\n      setTxt(\"Entry Time Qrcode Scan\");\r\n      setEmpData([]);\r\n      document.querySelector(\".attendanceChecker\").style.backgroundColor =\r\n        \"white\";\r\n      document.querySelector(\".btn2\").classList.remove(\"doneBtn\");\r\n      document.querySelector(\".btn1\").classList.add(\"doneBtn\");\r\n    } else if (val === \"OUT\") {\r\n      setTxt(\"Exit Time Qrcode Scan\");\r\n      setEmpData([]);\r\n      document.querySelector(\".attendanceChecker\").style.backgroundColor =\r\n        \"floralwhite\";\r\n      document.querySelector(\".btn1\").classList.remove(\"doneBtn\");\r\n      document.querySelector(\".btn2\").classList.add(\"doneBtn\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"extryExitBtn\">\r\n        {/* <Radio.Group\r\n          options={options}\r\n          onChange={handleTimeChange}\r\n          value={timeVal}\r\n          optionType=\"button\"\r\n          buttonStyle=\"solid\"\r\n          size=\"large\"\r\n        /> */}\r\n\r\n        <Button\r\n          onClick={() => handleTimeChange(\"IN\")}\r\n          type=\"default\"\r\n          shape=\"circle\"\r\n          size=\"large\"\r\n          className=\"btn1 doneBtn\"\r\n        >\r\n          IN\r\n        </Button>\r\n        <Button\r\n          onClick={() => handleTimeChange(\"OUT\")}\r\n          style={{ marginLeft: \"15px\" }}\r\n          type=\"default\"\r\n          shape=\"circle\"\r\n          size=\"large\"\r\n          className=\"btn2\"\r\n        >\r\n          OUT\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"attendanceChecker\">\r\n        <h3 className=\"txt mb-3\">{txt}</h3>\r\n        <div className=\"d-flex flex-row\">\r\n          <div className=\"cameraView\">\r\n            {/* <Webcam\r\n          width={400}\r\n          height={400}\r\n          mirrored={true}\r\n          ref={campureImg}\r\n          screenshotFormat=\"image/jpeg\"\r\n        /> */}\r\n\r\n            {empData?.length > 0 ? (\r\n              <div className=\"d-flex flex-column\">\r\n                <div className=\"userInfo\">\r\n                  <div className=\"userImg\">\r\n                    <Image\r\n                      width={100}\r\n                      src=\"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"info\">\r\n                    <span className=\"_title\">ID</span>\r\n                    <span className=\"_val\">{empData[0].empID}</span>\r\n                  </div>\r\n\r\n                  <div className=\"info\">\r\n                    <span className=\"_title\">Name</span>\r\n                    <span className=\"_val\">{empData[0].name}</span>\r\n                  </div>\r\n\r\n                  <div className=\"info\">\r\n                    <span className=\"_title\">\r\n                      {timeVal === \"IN\" ? \"Entry Time\" : \"Exit Time\"}\r\n                    </span>\r\n                    <span className=\"_val\">{moment().format(\"h:mm A\")}</span>\r\n                  </div>\r\n\r\n                  <div className=\"info\">\r\n                    <span className=\"_title\">Branch</span>\r\n                    <span className=\"_val\">{empData[0].branch}</span>\r\n                  </div>\r\n\r\n                  <div className=\"info\">\r\n                    <span className=\"_title\">Role</span>\r\n                    <span className=\"_val\">{empData[0].role}</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"d-flex flex-row justify-content-center mt-5\">\r\n                  <Button onClick={resetQrcode} type=\"primary\" size=\"large\">\r\n                    Reset\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <QrReader\r\n                delay={300}\r\n                onError={handleError}\r\n                onScan={handleScan}\r\n                style={{ width: \"400px\", height: \"400px\" }}\r\n              />\r\n            )}\r\n\r\n            {/* <Button type=\"primary\" onClick={capture}>\r\n          Capture photo\r\n        </Button> */}\r\n          </div>\r\n          <div className=\"rightText\">\r\n            <div className=\"con1\">\r\n              {/* <div className=\"imageDiv styl\">\r\n            <span>1. Capture Employee image</span>\r\n            <div className=\"iconDiv\">\r\n              <div className=\"loading\">\r\n                <LoadingOutlined />\r\n              </div>\r\n              <div className=\"rightTick\">\r\n                <CheckOutlined />\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n              <div className=\"QrcodeDiv styl\">\r\n                <span className=\"txt\">Scan QR Code</span>\r\n                <div className=\"iconDiv\">\r\n                  {empData.length > 0 ? (\r\n                    <div className=\"rightTick\">\r\n                      <CheckOutlined />\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"loading\">\r\n                      <LoadingOutlined />\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* <div className=\"wrongTick\">\r\n                <CloseOutlined />\r\n              </div> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AttendanceChecker;\r\n"],"sourceRoot":""}